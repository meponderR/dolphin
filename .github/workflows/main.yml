name: Dolphin-CI

on:
  push:
    branches: [ ios-jb ]
  pull_request:
    branches: [ ios-jb ]

jobs:
  ios:
    name: ios
    
    runs-on: macOS-latest
    
    steps:
    - name: Checkout Dolphin
      uses: actions/checkout@v2.1.0
      
    - name: Checkout submodules
      run: git submodule update --init --recursive
      
    - name: Install dependencies
      run: |
        brew install cmake ninja bartycrouch python ldid
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python get-pip.py
        /usr/local/bin/python3 -m pip install --upgrade polib
        pod install
      working-directory: ./Source/iOS/DolphiniOS

    - name: Setup Workspace
      run: |
           rm DolphiniOS/BuildResources/BuildScripts/UpdateEntitlements.sh
           touch DolphiniOS/BuildResources/BuildScripts/UpdateEntitlements.sh
           chmod 755 DolphiniOS/BuildResources/BuildScripts/UpdateEntitlements.sh
           curl https://cdn.oatmealdome.me/dolphinios/ipa/DolphiniOS-NJB-2.2.2-1.ipa -o dolphinr.ipa
           unzip -q dolphinr.ipa -d releaseipa/
           cp -r releaseipa/Payload/DolphiniOS.app/GoogleService-Info.plist DolphiniOS/GoogleService-Info.plist
           mkdir ipas
      working-directory: ./Source/iOS/DolphiniOS

#    - name: Compile non-jailbroken ipa
#      run: |
#           xcodebuild archive -workspace DolphiniOS.xcworkspace -scheme DolphiniOS -archivePath DolphiniOS-njb.xcarchive -configuration "Debug (Non-Jailbroken)" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
#           cp -r DolphiniOS-njb.xcarchive/Products/Applications/ Payload/
#           echo "Start Codesign"
#           ldid -EDolphiniOS/BuildResources/Entitlements_PsychicPaper_Release.plist Payload/DolphiniOS.app/
#           ldid -EDolphiniOS/BuildResources/Entitlements_PsychicPaper_Release.plist Payload/DolphiniOS.app/Frameworks/*
#           echo "End Codesign"
#           zip -q -r ipas/Dolphin-njb.ipa Payload
#           rm -r Payload/
#      working-directory: ./Source/iOS/DolphiniOS
#      
#    - name: Upload non-jailbroken ipa
#      uses: actions/upload-artifact@v2
#      with:
#        name: DolphiniOS Beta (Non-Jailbroken)
#        path: Source/iOS/DolphiniOS/ipas/Dolphin-njb.ipa
      
    - name: Compile jailbroken App
      run: |
           xcodebuild archive -workspace DolphiniOS.xcworkspace -scheme DolphiniOS -archivePath DolphiniOS-jb.xcarchive -configuration "Debug (Jailbroken)" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
           
           # cp -r "DolphiniOS-jb.xcarchive/Products/Applications/DolphiniOS.app" APP_DEST/
           # cp DolphiniOS/BuildResources/DebFiles/postinst.sh DEB/DEBIAN/postinst
           # cp DolphiniOS/BuildResources/DebFiles/postrm.sh DEB/DEBIAN/postrm
           # chmod -R 755 DEB/DEBIAN/*
           # sed "s/VERSION_NUMBER/$MARKETING_VERSION-$BUILD_NUMBER/g" DolphiniOS/BuildResources/DebFiles/control.in > DEB/DEBIAN/control
           
           # plutil -replace "CFBundleIdentifier" -string "me.oatmealdome.DolphiniOS" DolphiniOS-jb.xcarchive/Products/Applications/DolphiniOS.app/Info.plist
           # xcrun -sdk iphoneos clang -arch $(ARCHS) main.m -o csdbgd -framework IOKit -framework CoreFoundation -framework Foundation -O2
           
           # cp -r DolphiniOS-jb.xcarchive/Products/Applications/ Payload/
           # zip -qr ipas/Dolphin-jb.ipa Payload
           # rm -r Payload/
           
           cd /tmp/
           ls
      working-directory: ./Source/iOS/DolphiniOS
      
    - name: Upload jailbroken ipa
      uses: actions/upload-artifact@v2
      with:
        name: DolphiniOS Beta (Jailbroken)
        path: Source/iOS/DolphiniOS/DEBEX/
